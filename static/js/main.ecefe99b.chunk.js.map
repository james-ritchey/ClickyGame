{"version":3,"sources":["components/CharacterCard/index.js","components/Header/index.js","components/GamePage.js","App.js","index.js"],"names":["CharacterCard","props","react_default","a","createElement","className","data-name","name","onClick","src","image","alt","Header","info","score","highScore","GamePage","state","characters","hasClicked","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","handleCharClick","char","_this","includes","setState","console","log","temp","push","tempScore","newCharArray","_this2","this","components_Header","map","components_CharacterCard","key","Component","App","components_GamePage","ReactDOM","render","src_App","document","getElementById"],"mappings":"okEAWeA,MARf,SAAuBC,GACrB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYC,YAAWL,EAAMM,KAAMC,QAAS,kBAAMP,EAAMO,QAAQP,EAAMM,QACnFL,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,MAAOC,IAAKV,EAAMM,eCOzBK,MAVf,SAAgBX,GACd,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAAb,eACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAQJ,EAAMY,MAC3BX,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAAb,UAA6BJ,EAAMa,MAAnC,kBAAyDb,EAAMc,oBCmFtDC,oNApFXC,MAAQ,CACJC,aACAC,WAAY,GACZL,MAAO,EACPC,UAAW,EACXF,KAAM,mEASVO,QAAU,SAAUC,GAMhB,IAJA,IACIC,EAAgBC,EADhBC,EAAeH,EAAMI,OAIlB,IAAMD,GAETD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAIzCF,EAAiBD,EAHjBG,GAAgB,GAIhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAGzB,OAAOD,KAIXQ,gBAAkB,SAACC,GACf,GAAIC,EAAKd,MAAME,WAAWa,SAASF,GAiB/BC,EAAKE,SAAS,CAACd,WAAY,GAAIL,MAAO,EAAGD,KAAM,oCAC/CqB,QAAQC,IAAI,mBAlByB,CACrC,IAAIC,EAAOL,EAAKd,MAAME,WAClBN,EAAO,WACXuB,EAAKC,KAAKP,GACVI,QAAQC,IAAIC,GACwB,IAAjCL,EAAKd,MAAME,WAAWM,SACrBW,EAAO,GACPvB,EAAO,mCAEX,IAAIyB,EAAYP,EAAKd,MAAMH,MAAQ,EAChCiB,EAAKd,MAAMF,UAAYuB,GACtBP,EAAKE,SAAS,CAAClB,UAAWuB,IAE9BP,EAAKE,SAAS,CAACd,WAAYiB,EAAMtB,MAAOwB,EAAWzB,KAAMA,IACzDqB,QAAQC,IAAIJ,EAAKd,OAMrB,IAAIsB,EAAeR,EAAKX,QAAQW,EAAKd,MAAMC,YAC3Ca,EAAKE,SAAS,CAACf,WAAYqB,6EAGtB,IAAAC,EAAAC,KACL,OACIvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACsC,EAAD,CACI7B,KAAM4B,KAAKxB,MAAMJ,KACjBC,MAAO2B,KAAKxB,MAAMH,MAClBC,UAAW0B,KAAKxB,MAAMF,YAE1Bb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACVoC,KAAKxB,MAAMC,WAAWyB,IAAI,SAAAb,GAAI,OAC3B5B,EAAAC,EAAAC,cAACwC,EAAD,CACAC,IAAKf,EAAKvB,KACVA,KAAMuB,EAAKvB,KACXG,MAAOoB,EAAKpB,MACZF,QAASgC,EAAKX,6BA3EfiB,cCCRC,MAJf,WACE,OAAO7C,EAAAC,EAAAC,cAAC4C,EAAD,OCATC,IAASC,OAAOhD,EAAAC,EAAAC,cAAC+C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.ecefe99b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction CharacterCard(props){\n  return (\n    <div className=\"char-card\" data-name={props.name} onClick={() => props.onClick(props.name)}>\n      <img src={props.image} alt={props.name} />\n    </div>\n  );\n}\n\nexport default CharacterCard;\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Header(props){\r\n  return (\r\n    <div className=\"header\">\r\n      <p className=\"title\">Clicky Game</p>\r\n      <p className=\"info\">{props.info}</p>\r\n      <p className=\"score\">Score: {props.score} | High Score: {props.highScore}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport CharacterCard from \"./CharacterCard\";\r\nimport Header from \"./Header\";\r\nimport characters from \"./characterList.json\";\r\nimport \"./style.css\";\r\n\r\nclass GamePage extends Component {\r\n    state = {\r\n        characters,\r\n        hasClicked: [],\r\n        score: 0,\r\n        highScore: 0,\r\n        info: \"Click an image to begin, don't click on the same image twice!\"\r\n    }\r\n\r\n    /**\r\n     * Randomly shuffle an array\r\n     * https://stackoverflow.com/a/2450976/1293256\r\n     * @param  {Array} array The array to shuffle\r\n     * @return {String}      The first item in the shuffled array\r\n     */\r\n    shuffle = function (array) {\r\n\r\n        var currentIndex = array.length;\r\n        var temporaryValue, randomIndex;\r\n\r\n        // While there remain elements to shuffle...\r\n        while (0 !== currentIndex) {\r\n            // Pick a remaining element...\r\n            randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex -= 1;\r\n\r\n            // And swap it with the current element.\r\n            temporaryValue = array[currentIndex];\r\n            array[currentIndex] = array[randomIndex];\r\n            array[randomIndex] = temporaryValue;\r\n        }\r\n\r\n        return array;\r\n\r\n    };\r\n\r\n    handleCharClick = (char) => {\r\n        if(!this.state.hasClicked.includes(char)){\r\n            var temp = this.state.hasClicked;\r\n            var info = \"Correct!\";\r\n            temp.push(char);\r\n            console.log(temp);\r\n            if(this.state.hasClicked.length === 9) {\r\n                temp = [];\r\n                info = \"All images clicked, keep going!\";\r\n            }\r\n            var tempScore = this.state.score + 1;\r\n            if(this.state.highScore < tempScore) {\r\n                this.setState({highScore: tempScore});\r\n            }\r\n            this.setState({hasClicked: temp, score: tempScore, info: info});\r\n            console.log(this.state);\r\n        }\r\n        else {\r\n            this.setState({hasClicked: [], score: 0, info: \"You guessed wrong, score reset!\"});\r\n            console.log(\"Score reset\");\r\n        }\r\n        var newCharArray = this.shuffle(this.state.characters);\r\n        this.setState({characters: newCharArray})\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Header \r\n                    info={this.state.info}\r\n                    score={this.state.score}\r\n                    highScore={this.state.highScore}\r\n                />\r\n                <div className=\"char-list\"> \r\n                    {this.state.characters.map(char => (\r\n                        <CharacterCard\r\n                        key={char.name} \r\n                        name={char.name}\r\n                        image={char.image}\r\n                        onClick={this.handleCharClick}\r\n                        />\r\n                    ))}\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GamePage;\r\n","import React from \"react\";\nimport GamePage from \"./components/GamePage\";\n\nfunction App() {\n  return <GamePage />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}